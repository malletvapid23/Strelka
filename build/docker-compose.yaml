version: '2'

networks:
  net:

volumes:
  logs:

services:
  frontend:
    build:
      context: ..
      dockerfile: build/go/frontend/Dockerfile
    command: strelka-frontend
    ports:
      - "57314:57314"  # must match the port in frontend.yaml
    networks:
      - net
    volumes:
      - ../configs/go/frontend/:/etc/strelka/:ro
      - logs:/var/log/strelka/
    restart: unless-stopped
    container_name: strelka_frontend_1
    depends_on:
      - coordinator
      - gatekeeper

  backend:
    build:
      context: ..
      dockerfile: build/python/backend/Dockerfile
    command: strelka-backend
    shm_size: 512mb  # increase as necessary, required for some scanners
    networks:
      - net
    volumes:
      - ../configs/python/backend/:/etc/strelka/:ro
    restart: unless-stopped
    container_name: strelka_backend_1
    depends_on:
      - coordinator

  manager:
    build:
      context: ..
      dockerfile: build/go/manager/Dockerfile
    command: strelka-manager
    restart: unless-stopped
    container_name: strelka_manager_1
    networks:
      - net
    volumes:
      - ../configs/go/manager/:/etc/strelka/:ro
    depends_on:
      - coordinator

  mmrpc:
    build:
      context: ..
      dockerfile: build/python/mmrpc/Dockerfile
    command: strelka-mmrpc --threads 2 --address [::]:33907
    container_name: strelka_mmrpc_1
    networks:
      - net

  coordinator:
    image: redis:alpine
    command: redis-server --save "" --appendonly no  # alt: use config file via volume mapping
    container_name: strelka_coordinator_1
    networks:
      - net

  gatekeeper:
    image: redis:alpine
    command: redis-server --save "" --appendonly no --maxmemory-policy allkeys-lru  # alt: use config file via volume mapping
    container_name: strelka_gatekeeper_1
    networks:
      - net

  jaeger:
    container_name: strelka_jaeger_1
    environment:
      - 'COLLECTOR_ZIPKIN_HOST_PORT=:9411'
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - net
    ports:
      - '16686:16686'    # HTTP query     frontend UI
      - '6831:6831/udp'  # UDP  agent     accept jaeger.thrift over Thrift-compact protocol (used by most SDKs)
      - '6832:6832/udp'  # UDP  agent     accept accept jaeger.thrift over Thrift-binary protocol (used by Node.js SDK)
      - '5778:5778'      # UDP  agent     serve configs
      - '4317:4317'      # HTTP collector accept OpenTelemetry Protocol (OTLP) over gRPC
      - '4318:4318'      # HTTP collector accept OpenTelemetry Protocol (OTLP) over HTTP
      - '14250:14250'    # HTTP collector accept model.proto
      - '14268:14268'    # HTTP collector accept jaeger.thrift
      - '9411:9411'      # HTTP collector Zipkin compatible endpoint
    image: 'jaegertracing/all-in-one:1.42'
